<!DOCTYPE html>
<html>
<head>
  <title>CyberTwitter</title>
  <link rel="stylesheet" type="text/css" href="/css/index_style.css">
  <link href='https://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'>
</head>
<body>
  <canvas id="Matrix"></canvas>
  <div class="container">
    <div class="overlay"></div>
    <div class="content">
      <h1 class="heading">
        <div class="glitch" data-text="Welcome to CyberTwitter ">Welcome to CyberTwitter </>
        <div class="glow">Welcome to CyberTwitter </div>
        <div class="scanlines"></div>
      </h1>
      <div class='console-container'><span id='text'></span><div class='console-underscore' id='console'>&#95;</div></div>
      <div class="buttons">
        <a href="/signup" class="signup-button">Sign Up</a>
        <a href="/login" class="login-button">Log In</a>
      </div>
    </div>
  </div>
  <script>
    const canvas = document.getElementById('Matrix');
    const context = canvas.getContext('2d');

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const katakana = 'アァカサタナハマヤャラワガザダバパイィキシチニヒミリヰギジヂビピウゥクスツヌフムユュルグズブヅプエェケセテネヘメレヱゲゼデベペオォコソトノホモヨョロヲゴゾドボポヴッン';
    const latin = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const nums = '0123456789';

    const alphabet = katakana + latin + nums;

    const fontSize = 16;
    const columns = canvas.width / fontSize;

    const rainDrops = Array.from({ length: columns }).fill(canvas.height);

    for (let x = 0; x < columns; x++) {
        rainDrops[x] = 1;
    }

    const draw = () => {
        context.fillStyle = 'rgba(0, 0, 0, 0.05)';
        context.fillRect(0, 0, canvas.width, canvas.height);

        context.fillStyle = '#0F0';
        context.font = fontSize + 'px monospace';

        for (let i = 0; i < rainDrops.length; i++) {
            const text = alphabet.charAt(Math.floor(Math.random() * alphabet.length));
            context.fillText(text, i * fontSize, rainDrops[i] * fontSize);

            if (rainDrops[i] * fontSize > canvas.height && Math.random() > 0.975) {
                rainDrops[i] = 0;
            }
            rainDrops[i]++;
        }
    };

    setInterval(draw, 75);

    consoleText(
      [
        'Connect and share in a cyberpunk world.',
        'Connettiti e condividi in un mondo cyberpunk.',
        'Vernetzen und teilen Sie sich in einer Cyberpunk-Welt.',
        'Conecte-se e compartilhe em um mundo cyberpunk.',
        'Conecta y comparte en un mundo cyberpunk.',
        'Подключайтесь и делитесь в киберпанковом мире.',
        '接入并分享在一个赛博朋克世界。',
        '연결하고 사이버 펑크 세계에서 공유하세요.',
        'Conéctate y comparte en un mundo de ciberpunk.',
        'Kytke ja jaa cyberpunk-maailmassa.',
        'Conectează-te și împărtășește într-o lume cyberpunk.',
        '연결하고 사이버펑크 세계에서 공유하세요.',
        'Prisijunkite ir bendrinkite kibernetinėje pasaulio.',
        'Ligação e partilha num mundo cyberpunk.',
        'Συνδεθείτε και μοιραστείτε σε έναν κυβερνοπανκ κόσμο.',
        'Anslut och dela i en cyberpunk-värld.',
        'Połącz się i udostępniaj w cyberpunkowym świecie.',
        'Connectez-vous et partagez dans un monde de cyberpunk.',
        'Підключайтеся та діліться у кіберпанк світі.'
      ],
      'text',
      [
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)',
        'rgb(223, 191, 191)'
      ]
    );    
    
    function consoleText(words, id, colors) {
      if (colors === undefined) colors = ['#fff'];
      var visible = true;
      var con = document.getElementById('console');
      var letterCount = 1;
      var x = 1;
      var waiting = false;
      var target = document.getElementById(id)
      target.setAttribute('style', 'color:' + colors[0])
      window.setInterval(function() {
    
        if (letterCount === 0 && waiting === false) {
          waiting = true;
          target.innerHTML = words[0].substring(0, letterCount)
          window.setTimeout(function() {
            var usedColor = colors.shift();
            colors.push(usedColor);
            var usedWord = words.shift();
            words.push(usedWord);
            x = 1;
            target.setAttribute('style', 'color:' + colors[0])
            letterCount += x;
            waiting = false;
          }, 1000)
        } else if (letterCount === words[0].length + 1 && waiting === false) {
          waiting = true;
          window.setTimeout(function() {
            x = -1;
            letterCount += x;
            waiting = false;
          }, 1000)
        } else if (waiting === false) {
          target.innerHTML = words[0].substring(0, letterCount)
          letterCount += x;
        }
      }, 120)
      window.setInterval(function() {
        if (visible === true) {
          con.className = 'console-underscore hidden'
          visible = false;
    
        } else {
          con.className = 'console-underscore'
    
          visible = true;
        }
      }, 400)
    }
  </script>
</body>
</html>
